{"ast":null,"code":"var _jsxFileName = \"/Users/vidhypatel/MERNstack1/client/src/scenes/loginPage/Form.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Box, Button, TextField, useMediaQuery, Typography, useTheme } from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerSchema = yup.object().shape({\n  firstName: yup.string.required(\"required\"),\n  lastName: yup.string.required(\"required\"),\n  email: yup.string.email(\"invalid email\").required(\"required\"),\n  password: yup.string.required(\"required\"),\n  location: yup.string.required(\"required\"),\n  occupation: yup.string.required(\"required\"),\n  picture: yup.string.required(\"required\")\n});\nconst loginSchema = yup.object().shape({\n  email: yup.string.email(\"invalid email\").required(\"required\"),\n  password: yup.string.required(\"required\")\n});\nconst initialValueRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  occupation: \"\",\n  picture: \"\"\n};\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\nconst Form = () => {\n  _s();\n  const [pageType, setPageType] = useState(\"login\");\n  const {\n    palette\n  } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n  const handleFormSubmit = async (values, onSubmitProps) => {};\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: handleFormSubmit,\n    initialValues: isLogin ? initialValuesLogin : initialValuesRegister,\n    validationSchema: isLogin ? loginSchema : registerSchema,\n    children: _ref => {\n      let {\n        values,\n        errors,\n        touched,\n        handleBlue,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"grid\",\n          gap: \"30px\",\n          gridTemplateColumns: \"repeat(4, minmax(0, 1fr))\",\n          sx: {\n            \"& > div\": {\n              gridColumn: isNonMobile ? undefined : \"span 4\"\n            }\n          },\n          children: isRegister && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"8DIOG0TZdtriTk986WtN4O8mFiw=\", false, function () {\n  return [useTheme, useDispatch, useNavigate, useMediaQuery];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","Box","Button","TextField","useMediaQuery","Typography","useTheme","EditOutlinedIcon","Formik","yup","useNavigate","useDispatch","setLogin","Dropzone","FlexBetween","Fragment","_Fragment","jsxDEV","_jsxDEV","registerSchema","object","shape","firstName","string","required","lastName","email","password","location","occupation","picture","loginSchema","initialValueRegister","initialValuesLogin","Form","_s","pageType","setPageType","palette","dispatch","navigate","isNonMobile","isLogin","isRegister","handleFormSubmit","values","onSubmitProps","onSubmit","initialValues","initialValuesRegister","validationSchema","children","_ref","errors","touched","handleBlue","handleChange","handleSubmit","setFieldValue","resetForm","display","gap","gridTemplateColumns","sx","gridColumn","undefined","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vidhypatel/MERNstack1/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  TextField,\n  useMediaQuery,\n  Typography,\n  useTheme\n} from \"@mui/material\";\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { setLogin } from \"state\";\nimport Dropzone from \"react-dropzone\";\nimport FlexBetween from \"components/FlexBetween\";\n\nconst registerSchema = yup.object().shape({\n  firstName: yup.string.required(\"required\"),\n  lastName: yup.string.required(\"required\"),\n  email: yup.string.email(\"invalid email\").required(\"required\"),\n  password: yup.string.required(\"required\"),\n  location: yup.string.required(\"required\"),\n  occupation: yup.string.required(\"required\"),\n  picture: yup.string.required(\"required\")\n});\n\nconst loginSchema = yup.object().shape({\n  email: yup.string.email(\"invalid email\").required(\"required\"),\n  password: yup.string.required(\"required\")\n});\n\nconst initialValueRegister = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  location: \"\",\n  occupation: \"\",\n  picture: \"\"\n};\n\nconst initialValuesLogin = {\n  email: \"\",\n  password: \"\"\n};\n\nconst Form = () => {\n  const [pageType, setPageType] = useState(\"login\");\n  const { palette } = useTheme();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\n  const isLogin = pageType === \"login\";\n  const isRegister = pageType === \"register\";\n\n  const handleFormSubmit = async (values, onSubmitProps) => { };\n\n  return (\n    <Formik\n      onSubmit={handleFormSubmit}\n      initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n      validationSchema={isLogin ? loginSchema : registerSchema}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleBlue,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        resetForm,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box\n            display=\"grid\"\n            gap=\"30px\"\n            gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n            sx={{\n              \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\"}\n            }}\n          >\n            {isRegister && (\n              <>\n\n              </>\n            )}\n          </Box>\n        </form>\n      )}\n\n    </Formik>\n  )\n};\n\nexport default Form;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACEC,GAAG,EACHC,MAAM,EACNC,SAAS,EACTC,aAAa,EACbC,UAAU,EACVC,QAAQ,QACH,eAAe;AACtB,OAAOC,gBAAgB,MAAM,kCAAkC;AAC/D,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGV,GAAG,CAACW,MAAM,EAAE,CAACC,KAAK,CAAC;EACxCC,SAAS,EAAEb,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC1CC,QAAQ,EAAEhB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC;EACzCE,KAAK,EAAEjB,GAAG,CAACc,MAAM,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EAC7DG,QAAQ,EAAElB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC;EACzCI,QAAQ,EAAEnB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC;EACzCK,UAAU,EAAEpB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC;EAC3CM,OAAO,EAAErB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU;AACzC,CAAC,CAAC;AAEF,MAAMO,WAAW,GAAGtB,GAAG,CAACW,MAAM,EAAE,CAACC,KAAK,CAAC;EACrCK,KAAK,EAAEjB,GAAG,CAACc,MAAM,CAACG,KAAK,CAAC,eAAe,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EAC7DG,QAAQ,EAAElB,GAAG,CAACc,MAAM,CAACC,QAAQ,CAAC,UAAU;AAC1C,CAAC,CAAC;AAEF,MAAMQ,oBAAoB,GAAG;EAC3BV,SAAS,EAAE,EAAE;EACbG,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE;AACX,CAAC;AAED,MAAMG,kBAAkB,GAAG;EACzBP,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMO,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM;IAAEsC;EAAQ,CAAC,GAAGhC,QAAQ,EAAE;EAC9B,MAAMiC,QAAQ,GAAG5B,WAAW,EAAE;EAC9B,MAAM6B,QAAQ,GAAG9B,WAAW,EAAE;EAC9B,MAAM+B,WAAW,GAAGrC,aAAa,CAAC,oBAAoB,CAAC;EACvD,MAAMsC,OAAO,GAAGN,QAAQ,KAAK,OAAO;EACpC,MAAMO,UAAU,GAAGP,QAAQ,KAAK,UAAU;EAE1C,MAAMQ,gBAAgB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,aAAa,KAAK,CAAE,CAAC;EAE7D,oBACE5B,OAAA,CAACV,MAAM;IACLuC,QAAQ,EAAEH,gBAAiB;IAC3BI,aAAa,EAAEN,OAAO,GAAGT,kBAAkB,GAAGgB,qBAAsB;IACpEC,gBAAgB,EAAER,OAAO,GAAGX,WAAW,GAAGZ,cAAe;IAAAgC,QAAA,EAExDC,IAAA;MAAA,IAAC;QACAP,MAAM;QACNQ,MAAM;QACNC,OAAO;QACPC,UAAU;QACVC,YAAY;QACZC,YAAY;QACZC,aAAa;QACbC;MACF,CAAC,GAAAP,IAAA;MAAA,oBACClC,OAAA;QAAM6B,QAAQ,EAAEU,YAAa;QAAAN,QAAA,eAC3BjC,OAAA,CAACjB,GAAG;UACF2D,OAAO,EAAC,MAAM;UACdC,GAAG,EAAC,MAAM;UACVC,mBAAmB,EAAC,2BAA2B;UAC/CC,EAAE,EAAE;YACF,SAAS,EAAE;cAAEC,UAAU,EAAEvB,WAAW,GAAGwB,SAAS,GAAG;YAAQ;UAC7D,CAAE;UAAAd,QAAA,EAEDR,UAAU,iBACTzB,OAAA,CAAAF,SAAA;QAGD;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEM;AAEb,CAAC;AAAClC,EAAA,CA/CID,IAAI;EAAA,QAEY5B,QAAQ,EACXK,WAAW,EACXD,WAAW,EACRN,aAAa;AAAA;AAAAkE,EAAA,GAL7BpC,IAAI;AAiDV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}