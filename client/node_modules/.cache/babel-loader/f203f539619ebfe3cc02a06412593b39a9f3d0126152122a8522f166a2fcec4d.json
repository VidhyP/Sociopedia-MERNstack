{"ast":null,"code":"// import { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   useMediaQuery,\n//   Typography,\n//   useTheme\n// } from \"@mui/material\";\n// import EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\n// import { Formik } from \"formik\";\n// import * as yup from \"yup\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useDispatch } from \"react-redux\";\n// import { setLogin } from \"state\";\n// import Dropzone from \"react-dropzone\";\n// import FlexBetween from \"components/FlexBetween\";\n\n// const registerSchema = yup.object().shape({\n//   firstName: yup.string.required(\"required\"),\n//   lastName: yup.string.required(\"required\"),\n//   email: yup.string.email(\"invalid email\").required(\"required\"),\n//   password: yup.string.required(\"required\"),\n//   location: yup.string.required(\"required\"),\n//   occupation: yup.string.required(\"required\"),\n//   picture: yup.string.required(\"required\")\n// });\n\n// const loginSchema = yup.object().shape({\n//   email: yup.string.email(\"invalid email\").required(\"required\"),\n//   password: yup.string.required(\"required\")\n// });\n\n// const initialValuesRegister = {\n//   firstName: \"\",\n//   lastName: \"\",\n//   email: \"\",\n//   password: \"\",\n//   location: \"\",\n//   occupation: \"\",\n//   picture: \"\"\n// };\n\n// const initialValuesLogin = {\n//   email: \"\",\n//   password: \"\"\n// };\n\n// const Form = () => {\n//   const [pageType, setPageType] = useState(\"login\");\n//   const { palette } = useTheme();\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\n//   const isLogin = pageType === \"login\";\n//   const isRegister = pageType === \"register\";\n\n//   const handleFormSubmit = async (values, onSubmitProps) => { };\n\n//   return (\n//     <Formik\n//       onSubmit={handleFormSubmit}\n//       initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n//       validationSchema={isLogin ? loginSchema : registerSchema}\n//     >\n//       {({\n//         values,\n//         errors,\n//         touched,\n//         handleBlue,\n//         handleChange,\n//         handleSubmit,\n//         setFieldValue,\n//         resetForm,\n//       }) => (\n//         <form onSubmit={handleSubmit}>\n//           <Box\n//             display=\"grid\"\n//             gap=\"30px\"\n//             gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n//             sx={{\n//               \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\"}\n//             }}\n//           >\n//             {isRegister && (\n//               <>\n\n//               </>\n//             )}\n//           </Box>\n//         </form>\n//       )}\n\n//     </Formik>\n//   )\n// };\n\n// export default Form;","map":{"version":3,"names":[],"sources":["/Users/vidhypatel/MERNstack1/client/src/scenes/loginPage/Form.jsx"],"sourcesContent":["// import { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   useMediaQuery,\n//   Typography,\n//   useTheme\n// } from \"@mui/material\";\n// import EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\n// import { Formik } from \"formik\";\n// import * as yup from \"yup\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useDispatch } from \"react-redux\";\n// import { setLogin } from \"state\";\n// import Dropzone from \"react-dropzone\";\n// import FlexBetween from \"components/FlexBetween\";\n\n// const registerSchema = yup.object().shape({\n//   firstName: yup.string.required(\"required\"),\n//   lastName: yup.string.required(\"required\"),\n//   email: yup.string.email(\"invalid email\").required(\"required\"),\n//   password: yup.string.required(\"required\"),\n//   location: yup.string.required(\"required\"),\n//   occupation: yup.string.required(\"required\"),\n//   picture: yup.string.required(\"required\")\n// });\n\n// const loginSchema = yup.object().shape({\n//   email: yup.string.email(\"invalid email\").required(\"required\"),\n//   password: yup.string.required(\"required\")\n// });\n\n// const initialValuesRegister = {\n//   firstName: \"\",\n//   lastName: \"\",\n//   email: \"\",\n//   password: \"\",\n//   location: \"\",\n//   occupation: \"\",\n//   picture: \"\"\n// };\n\n// const initialValuesLogin = {\n//   email: \"\",\n//   password: \"\"\n// };\n\n// const Form = () => {\n//   const [pageType, setPageType] = useState(\"login\");\n//   const { palette } = useTheme();\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const isNonMobile = useMediaQuery(\"(min-width: 600px)\");\n//   const isLogin = pageType === \"login\";\n//   const isRegister = pageType === \"register\";\n\n//   const handleFormSubmit = async (values, onSubmitProps) => { };\n\n//   return (\n//     <Formik\n//       onSubmit={handleFormSubmit}\n//       initialValues={isLogin ? initialValuesLogin : initialValuesRegister}\n//       validationSchema={isLogin ? loginSchema : registerSchema}\n//     >\n//       {({\n//         values,\n//         errors,\n//         touched,\n//         handleBlue,\n//         handleChange,\n//         handleSubmit,\n//         setFieldValue,\n//         resetForm,\n//       }) => (\n//         <form onSubmit={handleSubmit}>\n//           <Box\n//             display=\"grid\"\n//             gap=\"30px\"\n//             gridTemplateColumns=\"repeat(4, minmax(0, 1fr))\"\n//             sx={{\n//               \"& > div\": { gridColumn: isNonMobile ? undefined : \"span 4\"}\n//             }}\n//           >\n//             {isRegister && (\n//               <>\n\n//               </>\n//             )}\n//           </Box>\n//         </form>\n//       )}\n\n//     </Formik>\n//   )\n// };\n\n// export default Form;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}